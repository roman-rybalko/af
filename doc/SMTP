Прием на портах 25 137 138 139 445.
Порт 587 - проверка адреса для submission, наш сертификат, проверка по нашему ЦС, отключены RBL SPF и прочий антиспам, укороченный таймаут для ящика.
Spam Trap - отправка сообщений в spamtrap с вероятностью из системных настроек.
Системные и пользовательские ч/б списки. ч/б списки по IP, hostname, адресу отправителя в сессии, полю Subject сертификата. Проверка сначала черного списка затем белого.
Пользовательские ч/б списки для клиента, домена и ящика.
MX для клиента, домена и ящика.
Встроенный perl решено отключить, т.к. его можно заменить вызовом внешних скриптов, что эффективнее с точки зрения потребления памяти (внешний скрипт потребляет память кратковременно и вызывается не регулярно).
Wildcard (*@domain.com) решено не реализовывать - с ним теряется spamtrap на несуществующие адреса, а он (spamtrap) является единственной возможностью амортизации доменов с малым количеством пользователей.

- Проблема:
Как реализовать политики пользователя - сообщение может напрявляться нескольким пользователям и у них могут быть конфликтующие политики.
Часть пользователей приняли сообщение, часть отвергли.
+ Решение:
Принимать только 1 получателя, остальных отвергать с кодом 452 (или другим 4xx).
Сервер-отправитель должен перепослать сообщение для каждого временно недоставленного получателя.
Это решает проблему с конфликтующими политиками и затребует от отправителя больше ресурсов (что отпугнет спамеров).

- Проблема:
Нет возможности в аутентификаторе Exim определить порт получателя, а значит не понятно как достать из БД логин/пароль.
+ Решение:
Exim доработан - добавлена переменная $smtp_host_specific_port (smtp_host_specific_port-4.80.1.patch).

- Проблема:
Exim требует дополнительное экранирование в route_data.
route_data = \"<! host1.com!host2.com:587\"
Нет возможности с этим синтаксисовм задать пустой список.
route_data = \"<! \" # ошибка
+ Решение:
Проверять содержимое списка.
route_data = ${if bool_lax{LIST}{\"<! LIST\"}{}}

- Проблема:
route_list не позволяет задать пустой список
route_list = * "<! host1.com!host2.com:587"
route_list = ${if bool_lax{LIST}{* "<! LIST"}{}} - не работает
+ Решение: не используем route_list, используем только когда всегда есть данные

- Проблема:
Возможно зацикливание сообщений. Клиент может настроить циклические переадресации или задать наш сервер как свой MX.
+ Решение:
Добавить заголовок
X-AdvancedFiltering-MessageData-ViaRecipients: rcpt@ rcpt@ rcpt@
в smtp/mx и smtp/submission. Подписать DKIM.
При каждой пересылке в этот заголовок добавлять текущий адрес получателя.
Была идея использовать адреса отправителя, но это не сработает если где-то есть BATV.
При каждом приеме искать в этом заголовке цикл.
При обнаружении цикла отвергать с 5xx.

- Проблема:
При переадресации теряется информация об оригинальном отправителе (IP, mail from, Certificate).
Возможно настроить спам-рассылку на соседей отбелив спам-отправителя и задав Backup.
+ Решение:
Добавить заголовки
X-AdvancedFiltering-MessageData-SenderMailAddress: sender@test.com
X-AdvancedFiltering-MessageData-SenderHostAddress: 1.2.3.4
X-AdvancedFiltering-MessageData-SenderHostName: mx.test.com
X-AdvancedFiltering-MessageData-SenderCertificateSubject: <base64>
X-AdvancedFiltering-MessageData-SenderCertificateVerified: (TRUE/FALSE)
X-AdvancedFiltering-MessageData-SPFStatus: (TRUE/FALSE)
X-AdvancedFiltering-MessageData-SPFDescription: <base64>
X-AdvancedFiltering-MessageData-SpamStatus: (TRUE/FALSE)
X-AdvancedFiltering-MessageData-SpamDescription: <base64>
в smtp/submission и smtp/mx. Подписать DKIM.
Хоть mx не может быть настроен для сокрытия отправителя (на данный момент), но возможно sender->submission->mx, тогда потеряем оригинальные данные отправителя при отправке на mx.
Добавлять заголовки для каждого нового параметра списков доступа (bwlist).
Текстовые поля, где могут содержаться пробелы, кодировать в base64 (DKIM формируется relaxed (некоторые MTA,
как MS Exchange, перекодируют тело сообщения в base64, заголовки тоже, теоретически, могут быть изменены) - возможно
изменение количества пробелов, что приведет к несопоставлению в ч/б-списках).
При обнаружении нашей (dkim.advancedfiltering.net) подписи делать доп. проверку по ч/б-спискам. Текущие параметры
отправителя не обновлять - для отправки на mx использовать адрес отправителя из текущей SMTP-сессии.
Данные проверок по заголовкам (flag_sys_wl, flag_sys_bl, msg_sys_wbl, flag_user_wl, flag_user_bl, msg_user_wbl, flag_spf) переопределяют данные проверок по текущим сетевым параметрам,
таким образом в acl_smtp_data_end будут переопределенные данные из заголовков.
Проверку делать в acl_smtp_dkim.
SpamStatus/SpamDescription может отсутствовать. При наличии повторную спам-проверку не делать.

- Проблема:
В exim нет функции определения длины строки. Нет возможности реализовать алгоритм Message-Loop-Detector средствами exim.
+ Решение:
Сделать отдельный скрипт.
Отдельный скрипт лучше чем встроенный perl, т.к. его потребление памяти кратковременно.
