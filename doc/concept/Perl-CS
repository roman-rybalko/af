Стандарт кодирования для Perl
=============================

1. Более 5 аргументов передаются хэш-массивами (ключ => значение). Это документирует код и устраняет часть ошибок.
add_message(realm => $r, domain => $d, client => $c, mid => $id, tls_key => $key, tls_cert => $cert);

2. Менее 5 аргкментов передавать "как есть".
test_mailbox($mailbox);
test_data($dn, $filter, {field1 => $f1, field2 => f2});

3. Скрывать формат данных одной вызываемой функции от другой вызываемой функции. Выполнять явное преобразование, даже если поля совпадают - инкапсуляция преобразования формата в теле функции.
Верно:
my $data = get_data(...);
test_data(realm => $data->{realm}, client => $data->{client}, domain => $data->{domain});
Неверно:
my $data = get_data(...);
test_data(%$data);

4. Проверять наличие полей используя defined, иначе нет возможности использовать "0" или пустую строку.
Верно:
test_data(...) if defined($realm) && defined($client) && defined($domain);
Неверно:
test_data(...) if $realm && $client && $domain;

5. В каждой функции проверять наличие необходимых аргументов. Выдавать USAGE в исключение (die).
