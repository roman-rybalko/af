Сервисы
=======

Продукт реализуется посредством сервисов,
которые взаимодействуют между собой,
образуя иерархию зависимостей.

Список сервисов
===============

smtp - сервис приема сообщений из сети по протоколу SMTP из сети
submission - сервис отправки сообщений клиента по протоколу SMTP в сеть
console - WEB-консоль управления сервисом
webmail - WEB-интерфейс к клиентскому сервису IMAP
vpn - сервис vpn-подключений клиента
error - сервис приема по протоколу SMTP сообщений об ошибках
bounce - сервис формарования и отправки bounce-сообщений протокола SMTP
mailproc - сервис принимает по протоколу SMTP сообщения и проверяет их на спам (контентные методы), результат проверки пишет в БД
spamtrap - сервис принимает по протоколу SMTP сообщения и добавляет их в спам-базу с пометкой "спам"
hamtrap - сервис принимает по протоколу SMTP сообщения и добавляет их в спам-базу с пометкой "чистые"
spamsender - сервис отправки спама (один хост, в DNSBL)
mailstat - сервис периодического подсчета статистики (изменяет роутинг submission, агрегирует статистику для биллинга)


Список баз данных
=================

smtp - настройки для сервиса smtp
smtpdb - временные данные для сервиса smtp (Message-ID)
submission - настройки сервиса submission
submissiondb - временные данные для сервиса submission (Message-ID)
smtplog - логи получения сообщений
submissionlog - лоп отправки сообщений
consolelog - лог операций в WEB-консоли
billing - финансовые данные (платежи/расходы/счет)


Конфигурация сервиса
====================

Конфигурация каждого сервиса должна обеспечивать вывод сервиса из эксплуатации,
либо должны быть разработаны конфигурации:
0. Инсталляция (опционально)
1. Штатный режим
2. Вывод из эксплуатации (деинсталляция)

При установке сервис может добавить индексы в БД.
При выводе сервиса из эксплуатации индексы из БД будут удаляться.
После изменения индексов нужно остановить БД, очистить разделы
ou=user,o=advancedfiltering и ou=user,cn=accesslog на диске (удалить файлы),
запустить БД - раздел ou=user,o=advancedfiltering будет восстановлен по репликации,
в силу чего требуется обеспечить резервирование перед выводом сервиса из эксплуатации,
как минимум проверить состояние ldap-backup.

Конфигурация местоположения сервиса (порт, протокол, адрес)
находится в ou=system,o=advancedfiltering.

Аккаунты для сервисов
=====================

Для каждого сервиса создается отдельный аккаунт с префиксом af_.
Длина аккаунта не должна превышать 16 байт (дефолтное ограничение FreeBSD).
Префикс требуется для избежания конфликтов при обновлении операционной системы.
Пример: af_smtp, af_ldap.


Почтове адреса
==============
root@advancedfiltering.net - для логов со всех серверов
postmaster@advancedfiltering.net
dnsmaster@advancedfiltering.net
webmaster@advancedfiltering.net

Admin Email - для организационных сообщений
Tech Email - для технических автогенерированных сообщений (только адреса в клиентских доменах, т.к. с этих адресов идут бэкапы и спам, иначе нарушаем SPF)


Почтовые адреса для сервисов
============================

mailproc@services.advancedfiltering.net
spamtrap@services.advancedfiltering.net
bounce@services.advancedfiltering.net
error@services.advancedfiltering.net

xxx@services.advancedfiltering.net

Аутентификация и авторизация между сервисами
============================================

Аутентификация (проверка подлинности) 2-мя методами:
1. TLS сертификаты
2. Kerberos

Авторизация (проверка прав доступа) исходя из учетных данных Kerberos.

Большинством приложений TLS не рассматривается как средство авторизации.
Хоть и имеется возможность настроить авторизацию
исходя из данных сертификата пользователя (exim tls_peerdn),
это выглядит неестественно (ошибка авторизации на стадии установления
соединения STARTTLS).
Не все приложения поддерживают авторизацию на основе TLS (openldap).

Исходя из выше изложенного принято решение
применять TLS для допуска в инфраструктуру
и применять Kerberos для разграничения доступа.

***

Выявилось, что Exim не поддерживает клиентский код аутентификации Kerberos
ни через cyrus_sasl ни через heimdal_gssapi.

Фактически, приложения с аутентификацией - это Exim и OpenLdap.
Exim может авторизовать по сертификату, для OpenLdap авторизация не нужна.

Решено отказаться от SASL/Kerberos.
Блокирование отдельного хоста выполняется внесением его в CRL.
Kerberos использовать только для SSH и NFS.
