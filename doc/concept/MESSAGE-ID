Оптимизации
===========

Отслеживание Message-ID, In-Reply-To и References позволяет сэкономить ресурсы на проверке сообщения дорогостоящими методами.
Отслеживание In-Reply-To и References дополнительно позволяет пополнить БД образцов сообщений (Spam/Ham).


Использование
=============

Заголовок Message-ID в сообщении должен быть уникален, генерируется отправителем.
Может дублироваться или отсутствовать, но это ошибка отправителя.

Все входящие и исходящие сообщения (Message-ID) записываются в smtpdb и sdb (submission DB).
Туда-же записываются отправитель (в afUSMTPMessage) и получатели (в afUSMTPMessageData,afUSMTPMessage).

Для входящих сообщений ищем содержимое заголовков In-Reply-To и References в БД исходящих сообщений (sdb).
Для исходящих сообщений ищем In-Reply-To и References в БД входящих сообщений (smtpdb).

При обнаружении Message-ID и получателя обрабатываемого (входящего/исходящего) сообщения
в соответствующей БД (smtpdb/sdb) - игнорируем сообщение - это дубликат.
При обнаружении Message-ID обрабатываемого сообщения в БД но не обнаружении получателя в БД - добавляем получателя,
пропускаем сообщение без проверки (оно уже проверено) - это рассылка.

Первую запись afUSMTPMessageData,afUSMTPMessage создает mailproc.

Кодирование
===========

В заголовке Message-Id встречаются странные последовательности байт, непригодные для хранения в LDAP DN.
Решено кодировать Message-Id в модифицированный base64. По сути, Message-Id нужен для идентификации именно
этого сообщения и никакого другого. Для исходящих сообщений конвертировать так-же.

Конвертация:
1. Взять оригинальный заголовок ($rheader, priscine_header).
2. Убрать пробельные символы в начале и конце (т.к. разные реализации убирают/не убирают пробелы, убирают только один пробел).
3. Сконвертировать в base64.
4. Заменить + на -, = на _, / на .

Была идея дополнительно сжимать gzip, но решено отказаться. Сжатие которких строк Message-ID не дает эффекта.
Exim не поддерживает gzip (требуется разработка модуля dlfunc). Судя из API, Exim не поддерживает бинарные
данные (с нулевыми байтами), возвращаемые из БД. Дополнительно обернуть в base64 ухудшает сжатие с 50% до 20%.
Судя из API, Exim вообще не поддерживает бинарные данные (с нулевыми байтами) в переменных - только ASCII-Z строки.
