incoming: mid, sender
* Цель: быстро ответить отправителю и закрыть соединение за счет отложенной проверки сообщения.
  Теоретически это более эфективно и ресурсоэкономично, чем проверять во время приема сообщения.
  Эфектичнее противодействует DOS-атакам.
* Запись в БД создавать в realm для первого получателя (нет смысла для всех т.к. список получателей при повторной
  пересылке совпадает, запись в LDAP ресурсоемка), проверять для realm всех получателей.
* Записывать в лог и заводить запись в БД (новый атрибут) сразу при первом получении с целью разгрузить mailproc.
  Иначе, если mailproc не успевает, возможно его переполнить одинаковыми сообщениями.
- Была идея сохранять recipients и блокировать, если не совпадают. Но возможна ситуация,
  когда одно сообщение отправляется нескольким получателям в разных сессиях.
* При получении сообщения искать только mid и блокировать (Access denied - wrong Sender for this Message-ID),
  если отправитель не совпадает. Совпадение маловероятно. Если отправлять в mailproc то возникнет несколько записей
  с одним mid и разными sender.
- Была идея при приеме проверенного сообщение записать в лог и в БД (новый атрибут, queue id) для блокирования дубликатов.
  Не доставится сообщение, которое было отправлено нескольким получателям в разных сессиях.

outgoing: mid, sender
* Цель: снизить нагрузку на mailproc, снизить ложные срабатывания
* Запись в БД для realm отправителя, проверять для realm всех получателей.
* Проверять конкатенацию In-Reply-To и References.
