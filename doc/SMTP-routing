Входящий роутинг

-> - redirect_router
=> - errors_to
[] - condition
{} - unseen

# spamaddress - для бэкапа спама
# backup - для бэкапа остальной почты

* service [@services] {stop} => error
* service_defer [@services] {stop} -> service => error
* mailproc [flag_mailproc] {stop} -> service => error
* hamtrap [flag_hamtrap && sys_hamtrap] {continue} -> service => error
* spamtrap [flag_spamtrap && sys_spamtrap] {continue} -> service => error
* absent :blackhole: [flag_mb_absent] {stop} => error
* spamaddress user/domain/client [flag_spam] {continue} -> submission => error
* spam :blackhole: [flag_spam && !user_spt] {stop} => error
* backup user/domain/client [!flag_spam] {continue} -> submission => error
* redirect user/domain/client {stop} -> submission => error
* spambox user/domain/client [flag_spam] {stop} -> mx => error
* mx user/domain/client {stop} => bounce
* mx_defer {stop} -> mx => bounce
* submission {stop} => error
* submission_defer {stop} -> submission => error

Для spam проверять afUSMTPDMBIsAbsent,
т.к. отправка производится с адреса afUSMTPDMailBox,
нет возможности отправлять с несуществующего адреса.
Нет смысла проверять для backup и mx (теоретически)
т.к. несуществующий MailBox до этих роутеров не дойдет:
если включен spamtrap, то сообщение поглотит spam_last_router,
если spamtrap отключен, тогда будет отвергнут RCPT.

Была идея пересылать выходящее сообщение на соседний smtp в случае недоставки.
Нужно предотвратить пересылку сообщения spam- или backup-роутером, для этого добавлять заголовок. Этот заголовок нужно
учитывать только при получении сообщения с соседнего smtp и удалять его при передаче клиенту.
Но это ломает retry rules и неконтролируемо добавляет trace headers (Received).
Этот функционал требуется для вывода сервера из работы.
Для вывода из работы достаточно изменить конфигурацию - сделать единственный роутер для отправки на соседний smtp.
Дублированием отправки в spam и backup можно принебречь (до тех пор, когда, по каким либо причинам, выводы из работы
станут регулярными - тогда реализовать заголовок).
