Приоритеты методов аутентификации/авторизации сервиса submission
================================================================

1. Наш hostname
2. SMTP AUTH
3. TLS SNI
4. IP-адрес


Сценарии использования
======================

Аутентификационная информация находится в ou=system (для перенаправления пользователя на другой сервер).
Авторизационная информация находятся в ou=user (со всей остальной пользовательской информацией).
Для авторизации по TLS SNI обязательно требовать клиенту установить свой сертификат и ЦС. Иначе становится возможно авторизоваться другим логином не передав сертификат
либо передав любой сертификат, подписанный публичным центром сертификции.

Клиент присоединяется к серверу в другом realm.
Идентификация клиента по IP: будет ответ 4xx Moved.
Идентификация клиента по TLS SNI: будет выдан неверный сертификат и клиент отключится (ошибка транспорта эквивалентна 4xx), или получит 4xx в ответ на mail.
Идентификация клиента по SMTP AUTH: будет выдан 4xx в ответ на auth (server_condition), аутентификатор cram_md5 пока не используется т.к. нет возможности задать текст ошибки 4xx.

Ищем IP-адрес в service=submission,ou=system.
SMTP AUTH login и TLS SNI содержат clientName.
SMTP AUTH password и TLS ключи/сертификаты находятся в service=submission+realm=xxx,ou=user.

SMTP AUTH password и TLS ключи/сертификаты решено хранить в ou=user, что-бы не перегружить ou=system.
Хоть данные в ou=user могут быть недоступны (репликация не завершена) или не актуальны (если сервер вывели
из realm - клиент получит уведомление в MAIL), отсутствие информации об IP-адресе, логине или параметрах TLS
приведет ко временной ошибке соединения - клиент повторит попытку позже или сразу но на другой сервер.
При обработке MAIL в первую очередь проверить realm для домена отправителя.

Возможна ситуация: клиент использует только TLS SNI, другой клиент выставляет себе чужой IP, затем первый клиент не может уже воспользоваться своим IP.
Это решаемо административным способом, но порядок проверки все-же следует изменить.
Порядок проверки: (от более уникальных к менее уникальным) AUTH, SNI, IP.

Для запуска SMTP AUTH нужен синхронизированный раздел БД ou=user. В ответ на SMTP AUTH нужно уметь выдавать 4xx.

Для запуска TLS нужен синхронизированный раздел ou=user, т.к. клиент мог выставить свой сертификат. В ответ на SMTP STARTTLS нужно уметь выдавать 4xx.
При вызове STARTTLS еще не доступен SNI. Следовательно, в starttls_acl клиент может быть определен только по IP.
Нужно уметь рвать соединение в ходе инициализации TLS.
Если вернуть fail, клиенту будет выдано "4xx Temporary local problem - please try later", и это сообщение не управляется.
Предлагается возвращать пустую строку, если логин не определяется. В этом случае возможны ситуации:
1) раздел ou=user еще не синхронизирован, выставится системный сертификат, клиент передает SNI и любой публичный сертификат (подписанный общеизвестным ЦС),
проверка TLS успешна, но в MAIL получает "4xx Replicating".
2) ou=user синхронизирован, выставился клиентский сертификат, клиент передает SNI и любой публичный сертификат, проверка TLS проваливается, в MAIL получает "5xx Authentication needed".
3) ou=user не синхронизирован, выставился системный сертификат, клиент передает SNI и любой публичный сертификат, проверка TLS успешна,
ou=user синхронизировался, неправомерно отправляется сообщение.
Случай № 3 исключительный - на данный момент не известна возможность создавать условия для регулярной эксплуатации этой уязвимости. Пока допустим это.

Domain Alias для SMTP AUTH по domain и mbox должен работать точно так-же, как и в других подсистемах.


Алгоритм
========

логин = SMTP AUTH ? SMTP AUTH : TLS SNI ? TLS SNI : IP ? IP : нет
auth_acl = логин досутпен в ou=user ? проверка : 4xx
starttls_acl = логин досутпен в ou=user ? continue : 4xx
domain = alias ? alias : domain
