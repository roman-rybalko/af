exim_user = af_submission
exim_group = af_submission
log_file_path = /usr/local/advancedfiltering/submission/exim/log/%s.log
process_log_path = /usr/local/advancedfiltering/submission/exim/spool/exim-process.info
spool_directory = /usr/local/advancedfiltering/submission/exim/spool
split_spool_directory = true
never_users = root
daemon_smtp_ports = 587
host_lookup =
rfc1413_hosts = :
rfc1413_query_timeout = 0s
smtp_receive_timeout = 1s
local_scan_timeout = 1s
ignore_bounce_errors_after = 42d
timeout_frozen_after = 42d
acl_smtp_connect = connect_acl

# Lightweight Directory Access Protocol Connection
LDAP_C = ldapi://%2fusr%2flocal%2fadvancedfiltering%2fldap%2fldapi

# System LDAP DN
S_LDAP_DN = ou=system,o=advancedfiltering

# System SMTP LDAP DN
S_SMTP_LDAP_DN = afSServiceName=smtp,S_LDAP_DN
# System Submission LDAP DN
S_Submission_LDAP_DN = afSServiceName=submission,S_LDAP_DN

# User Submission LDAP DN
U_Submission_LDAP_DN = afUServiceName=submission,ou=user,o=advancedfiltering

# System Realm List (separated by coma)
S_REALM_Lc = ${lookup ldap{LDAP_C/afSHostName=${quote_ldap_dn:$primary_hostname},S_LDAP_DN?afSHostRealm?base}}

# System Host Certificate
S_H_C_D = /etc/advancedfiltering_ssl/$primary_hostname.crt
# System Host Certificate Key
S_H_CK_D = /etc/advancedfiltering_ssl/$primary_hostname.key
# System Host Certificate Authority
S_H_CA_D = /etc/advancedfiltering_ssl/ca

begin acl

connect_acl:
  defer
    message = Server shutdown

begin routers

# * service

# errors_to addresses need to be verified
service_verify_router:
  verify_only = true
  domains = services.advancedfiltering.net
  driver = accept

# Router User Realm LDAP Query
R_U_R_LDAP_Q = afSHostRealm=$acl_m_u_realm
# Router Host Realm LDAP Query
R_H_R_LDAP_Q = ${reduce{<, S_REALM_Lc}{|}{$value(afSHostRealm=${quote_ldap_dn:$item})}}
# Router Services Realm LDAP Query
R_S_R_LDAP_Q = ${if eq{}{$acl_m_u_realm}{R_H_R_LDAP_Q}{R_U_R_LDAP_Q}}

# Routers/Service Router Route Data Hosts List (separated by \n)
R_SRRD_H_Lnl = ${lookup ldapm{LDAP_C/S_LDAP_DN?afSHostName?sub?(&(R_S_R_LDAP_Q)(afSHostServiceName=$local_part))}}
# Routers/Service Router Route Data Address (uses $item)
R_SRRD_address_I = ${lookup ldap{LDAP_C/afSHostServiceName=$local_part,afSHostName=${quote_ldap_dn:$item},S_LDAP_DN?afSHServiceHostAddress?base}}
# Routers/Service Router Route Data Port (uses $item)
R_SRRD_port_I = ${lookup ldap{LDAP_C/afSHostServiceName=$local_part,afSHostName=${quote_ldap_dn:$item},S_LDAP_DN?afSHServiceTCPPort?base}}
# Routers/Service Router Route Data List (separated by \n)
R_SRRD_Lnl = ${map{<\n R_SRRD_H_Lnl}{${if bool_lax{R_SRRD_address_I}{R_SRRD_address_I}{$item}}${if bool_lax{R_SRRD_port_I}{:R_SRRD_port_I}{}}}}

# * service [@services] {stop} => error
service_router:
  domains = services.advancedfiltering.net
  driver = manualroute
  route_data = \"<\n R_SRRD_Lnl\"
  hosts_randomize = true
  transport = service_transport
  # error delivery loop prevention
  errors_to = ${if eqi{$local_part}{error}{}{error@services.advancedfiltering.net}}
  self = send

# * service_defer [@services] {stop} -> service => error
service_defer_router:
  domains = services.advancedfiltering.net
  driver = redirect
  allow_defer = true
  data = :defer:
  errors_to = error@services.advancedfiltering.net
  redirect_router = service_router

bounce_router:
  driver = redirect
  allow_fail = true
  data = :fail: Server shutdown
  errors_to = bounce@services.advancedfiltering.net

begin transports

service_transport:
  driver = smtp
  # mandatory tls
  hosts_require_tls = *
  # system cert, verify
  tls_certificate = S_H_C_D
  tls_privatekey = S_H_CK_D
  tls_verify_certificates = S_H_CA_D
  tls_crl = S_H_CA_D

begin retry

# DEBUG
^\N[^@]+@test\-smtp\.hosts\.advancedfiltering\.net$\N * F,5s,1s
^\N[^@]+@[^@]+\.test\.advancedfiltering\.net$\N * F,5s,1s
^\N[^@]+@w01\.hosts\.advancedfiltering\.net$\N * F,5s,1s
^\N[^@]+@w02\.hosts\.advancedfiltering\.net$\N * F,5s,1s
^\N[^@]+@h01\.hosts\.advancedfiltering\.net$\N * F,5s,1s
^\N[^@]+@h02\.hosts\.advancedfiltering\.net$\N * F,5s,1s

services.advancedfiltering.net * F,15m,1s

* rcpt_4xx F,1m,5s; F,15m,1m; F,1h,15m; F,1d,1h
* * F,15m,1m; F,1h,15m; F,1d,1h
